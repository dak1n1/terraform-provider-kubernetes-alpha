name: Upload release binaries
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+*'
    - nightly*
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read go-version
        id: go-version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./go-version
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.go-version.outputs.content }}
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: docker
          password: ${{ secrets.CODESIGN_GITHUB_TOKEN }}
      - id: codesign
        name: Pull hc-codesign image
        run: |
          docker pull docker.pkg.github.com/hashicorp/hc-codesign/hc-codesign:$VERSION
          echo "::set-output name=image::docker.pkg.github.com/hashicorp/hc-codesign/hc-codesign:$VERSION"
        env:
          VERSION: v0
      - name: Install hc-releases
        run: |
          DOWNLOAD_URL=$(curl -SsL \
            -H "Authorization: token ${{ secrets.CODESIGN_GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/hashicorp/hc-releases/releases/latest \
            | jq -r '.assets[] | select(.name | contains("linux_amd64.tgz")) | .url')
          curl -SsL -o /tmp/hc-releases.tgz \
            -H "Authorization: token ${{ secrets.CODESIGN_GITHUB_TOKEN }}" \
            -H "Accept: application/octet-stream" ${DOWNLOAD_URL}
          tar xzf /tmp/hc-releases.tgz
          sudo mv hc-releases /usr/bin/hc-releases
      - name: Import PGP key for archive signing
        run: echo -e "${{ secrets.PGP_SIGNING_KEY }}" | gpg --import
      - name: Release
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          PGP_USER_ID: ${{ secrets.PGP_USER_ID }}
          RELEASE_AWS_ACCESS_KEY_ID: ${{ secrets.RELEASE_AWS_ACCESS_KEY_ID }}
          RELEASE_AWS_SECRET_ACCESS_KEY: ${{ secrets.RELEASE_AWS_SECRET_ACCESS_KEY }}
          CODESIGN_IMAGE: ${{ steps.codesign.outputs.image }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          CIRCLE_TOKEN: ${{ secrets.CIRCLE_TOKEN }}
      - name: Publish released artifacts
        run: hc-releases publish
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.RELEASE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.RELEASE_AWS_SECRET_ACCESS_KEY }}
